const fs = require('fs');
const path = require('path');

console.log('=== VERIFICANDO CONFIGURA√á√ÉO DE IMAGENS ===\n');

// 1. Verificar se o diret√≥rio de uploads existe
const uploadsDir = path.join(process.cwd(), 'uploads');
const imagesDir = path.join(uploadsDir, 'images');

console.log('1. Verificando diret√≥rio de uploads...');
if (!fs.existsSync(uploadsDir)) {
  console.log('   ‚ùå Diret√≥rio uploads n√£o existe. Criando...');
  fs.mkdirSync(uploadsDir, { recursive: true });
  console.log('   ‚úÖ Diret√≥rio uploads criado.');
} else {
  console.log('   ‚úÖ Diret√≥rio uploads existe.');
}

if (!fs.existsSync(imagesDir)) {
  console.log('   ‚ùå Diret√≥rio uploads/images n√£o existe. Criando...');
  fs.mkdirSync(imagesDir, { recursive: true });
  console.log('   ‚úÖ Diret√≥rio uploads/images criado.');
} else {
  console.log('   ‚úÖ Diret√≥rio uploads/images existe.');
}

// 2. Verificar permiss√µes
try {
  fs.accessSync(imagesDir, fs.constants.W_OK);
  console.log('   ‚úÖ Permiss√µes de escrita OK.');
} catch (error) {
  console.log('   ‚ùå Erro de permiss√µes:', error.message);
}

// 3. Verificar arquivo .env
const envPath = path.join(process.cwd(), '.env');
console.log('\n2. Verificando arquivo .env...');
if (fs.existsSync(envPath)) {
  console.log('   ‚úÖ Arquivo .env existe.');
  const envContent = fs.readFileSync(envPath, 'utf8');
  if (envContent.includes('BASE_URL=')) {
    console.log('   ‚úÖ BASE_URL configurada.');
    const baseUrlMatch = envContent.match(/BASE_URL=(.+)/);
    if (baseUrlMatch) {
      console.log(`   üìç Valor: ${baseUrlMatch[1]}`);
    }
  } else {
    console.log('   ‚ùå BASE_URL n√£o encontrada no .env');
    console.log('   üí° Adicione: BASE_URL=https://app.raunaimer.adv.br');
  }
} else {
  console.log('   ‚ùå Arquivo .env n√£o existe.');
  console.log('   üí° Crie o arquivo .env com:');
  console.log('      BASE_URL=https://app.raunaimer.adv.br');
  console.log('      DATABASE_URL=sua_url_do_banco');
  console.log('      ... outras vari√°veis necess√°rias');
}

// 4. Testar cria√ß√£o de arquivo
console.log('\n3. Testando cria√ß√£o de arquivo...');
const testFile = path.join(imagesDir, 'test.txt');
try {
  fs.writeFileSync(testFile, 'test');
  fs.unlinkSync(testFile);
  console.log('   ‚úÖ Permiss√µes de escrita funcionando.');
} catch (error) {
  console.log('   ‚ùå Erro ao testar escrita:', error.message);
}

// 5. Verificar estrutura do projeto
console.log('\n4. Verificando estrutura do projeto...');
const mainTsPath = path.join(process.cwd(), 'src', 'main.ts');
if (fs.existsSync(mainTsPath)) {
  const mainContent = fs.readFileSync(mainTsPath, 'utf8');
  if (mainContent.includes('/api/uploads')) {
    console.log('   ‚úÖ Servir arquivos est√°ticos configurado no main.ts');
  } else {
    console.log('   ‚ùå Servir arquivos est√°ticos n√£o configurado');
  }
} else {
  console.log('   ‚ùå Arquivo main.ts n√£o encontrado');
}

console.log('\n=== RESUMO ===');
console.log('Para que as imagens funcionem corretamente:');
console.log('1. ‚úÖ Diret√≥rio uploads/images criado');
console.log('2. ‚ö†Ô∏è  Verifique se BASE_URL est√° no .env');
console.log('3. ‚úÖ Permiss√µes de escrita OK');
console.log('4. ‚úÖ Servir arquivos est√°ticos configurado');
console.log('\nüìß As imagens ser√£o inclu√≠das automaticamente nos emails de cobran√ßa!');
